@using BlazorApp2.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components
@using BlazorApp2.Models
@page "/ImportantTasks"
<h3>ImportantTasks</h3>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Note</th>
            <th>Due Date</th>
            <th>Category</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var task in tasks)
        {
            <tr>
                <td>@task.name</td>
                <td>@(task.note??"_")</td>
                <td>@task.Dueto.ToShortDateString()</td>
                <td>@(task.category?.ToString()??"_")</td>
            </tr>
        }
    </tbody>
</table>


@code {
    [Inject]
    private ToDoListDbContext Context { get; set; }
    private TodoList newTask = new TodoList();
    private List<TodoList> tasks = new();
 

    protected override async Task OnInitializedAsync()
    {
        if (Context != null)
        {
            tasks = await Context.TodoLists.Where(t => t.priority == Priority.Important).ToListAsync();
        }
    }

    private async Task boxChangePriority(TodoList task)
    {
        
        task.priority = task.priority == Priority.Low ? Priority.Important : Priority.Low;

        if (Context != null)
        {
            Context.TodoLists.Update(task);
            await Context.SaveChangesAsync();

            tasks = await Context.TodoLists.ToListAsync();
        }
    }
}
